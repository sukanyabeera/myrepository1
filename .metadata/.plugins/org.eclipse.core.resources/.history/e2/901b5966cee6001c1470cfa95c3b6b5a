package com.collections;

import java.util.HashSet;
import java.util.TreeSet;

public class CollectionSetProgram {

	public static void main(String[] args) {

		HashSet<Integer> hash=new HashSet<>();
		//add() is used to add the elements 
		hash.add(50);
		hash.add(20);
		hash.add(45);
		hash.add(80);
		hash.add(500);
		hash.add(150);
		
		
		HashSet<Integer> hash2=new HashSet<>();
		hash2.add(50);
		hash2.add(20);
		hash2.add(45);
		hash2.add(80);
		hash2.add(500);
		hash2.add(150);

		/*System.out.println(hash);
		//1.contains() is used to check whether the value is present or not
		System.out.println(hash.contains(50));
		//2.equals() checks that both the objects are same size and having same elements
		System.out.println(hash.equals(hash2));
		//containsAll() checks ,whether all the elements are present in the list
		System.out.println(hash.containsAll(hash2));
		//isEmpty() checks the object is empty or not
		System.out.println(hash.isEmpty());
		//remove() removes the element
		System.out.println(hash.remove(50));*/
		
		TreeSet<String> tree=new TreeSet<>();
		
		tree.add("mahi");
		tree.add("ram");
		tree.add("john");
		tree.add("Alex");
		tree.add("Andrew");
		tree.add("jimmy");
		tree.add("juda");
		
		//it returns the elements greater than or equal to the given elements
		System.out.println(tree.tailSet("j"));
		System.out.println(tree.subSet("a", "j"));
		
		
		


		
	}

}
